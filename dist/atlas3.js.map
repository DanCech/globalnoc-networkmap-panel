{"version":3,"sources":["atlas3.js"],"names":["_","$","MetricsPanelCtrl","appEvents","LeafletMap","Scale","CustomHover","panelDefaults","map_tile_url","data","lat","lng","zoom","choices","name","mapSrc","max","min","size","layers","hide_layers","twin_tubes","color","mode","colorScale","cardColor","exponent","colorScheme","fillBackground","legend","show","legend_colors","opacity","thresholds","tooltip","showLinkHover","showNodeHover","content","node_content","layer","criteria","link","selected","node","to_si","legendTypes","opacityScales","threshold_colors","tempArray","Atlas3","$scope","$injector","defaults","panel","map_holder_id","id","containerDivId","recentData","map_drawn","layer_ids","show_legend","t_colors","rgb_values","hex_values","json_index","json_content","custom_hover","scale","colorSchemes","getColorSchemes","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","dataList","render","process_data","self","data_targets","map","target","forEach","active","topology","undefined","links","endpoints","l","ep","includes","toggle","dir","target_endpoints","pop","push","endpoint","label","target_links","str","full","cur","sum","count","avg","interval","i","datapoints","length","value","start","end","obj","layer_max","layer_min","color_criteria","e","toFixed","color_value","popColor","popOpacity","getColor","endpointColor","endpointOpacity","getOpacity","getThresholdColor","lineColor","lineOpacity","az","azLineColor","azLineOpacity","toSI","now","arrow","za","zaLineColor","zaLineOpacity","update","num","err","dataRaw","addEditorTab","displayColor","actions","modalScope","$new","emit","src","scope","index","jsonModal","json","json_obj","JSON","parse","stringify","splice","remove","colors","invert","reverse","options","legendWidth","getOpacityScale","arr","original","toString","sort","a","b","getThresholdScale","htmlContent","parseHtml","elem","attrs","ctrl","adjLoadLegend","horizontal","html_content","getHtml","displayOpacity","width","card_color","display","isSorted","displayThresholds","drawLegend","validateSize","use_image","latlng","setMapUrl","panTo","setImageUrl","image_url","all_layers","removeLayers","j","networkLayer","addNetworkLayer","lineWidth","mapSource","nodeFillColor","layerId","onInitComplete","isJson","document","getElementById","console","log","containerId","bing_api_key","image","templateUrl"],"mappings":"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","file":"atlas3.js","sourcesContent":["/*\nCopyright 2018 The Trustees of Indiana University\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n\nimport './css/atlas3_leafletmap.css!';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {appEvents} from 'app/core/core';\nimport LeafletMap from './js/atlas3_leafletmap.js';\nimport {Scale} from './scale';\nimport {CustomHover} from './CustomHover';\n\nconst panelDefaults = {\n    map_tile_url: \"http://api.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}.png?access_token=\",\n    data: [],\n    lat: 33,\n    lng: -80,\n    zoom: 3,\n    choices: [],\n    name: [],\n    mapSrc: [],\n    max: [],\n    min: [],\n    size: [],\n    layers: [],\n    hide_layers: false,\n    twin_tubes: false,\n    color: {\n        mode: 'spectrum',\n        colorScale: 'linear',\n        cardColor: '#2f575e',\n        exponent: 0.5,\n        colorScheme: 'interpolateOranges',\n        fillBackground: false\n    },\n    legend: {\n        show: true,\n        mode: 'spectrum',\n        legend_colors: [],\n        opacity: [],\n        thresholds: []\n    },\n    tooltip:{\n        show: true,\n        showLinkHover: false,\n        showNodeHover: false,\n        content: ' ',\n        node_content: ' '\n    },\n    layer: {\n        criteria: ['Minimum', 'Maximum', 'Average', 'Current'],\n        link: { selected: 'Current' },\n        node: { selected: 'Current' }\n    },\n    to_si: 1000000000,\n    legendTypes: ['opacity','spectrum','threshold'],\n    opacityScales: ['linear', 'sqrt'],\n    colorScheme : 'interpolateRdYlGn',\n    threshold_colors: []\n};\n\nvar tempArray=[];\n\nexport class Atlas3 extends MetricsPanelCtrl {\n    constructor($scope, $injector) {\n        super($scope, $injector);\t\n        _.defaults(this.panel, panelDefaults);\n        this.map_holder_id = 'map_' + this.panel.id;\n        this.containerDivId = 'container_'+this.map_holder_id;\n        this.recentData = [];\n        this.map_drawn = false; \n        this.layer_ids = [];\n        this.show_legend = true;\n        this.opacity = [];\n        this.t_colors = [];\n        this.rgb_values = [];\n        this.hex_values = [];\n        this.json_index = null;\n        this.json_content = '';\n        this.custom_hover = new CustomHover();\n        this.scale = new Scale($scope,this.panel.colorScheme);\n        this.colorSchemes=this.scale.getColorSchemes(); \n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n    }\n\n    onDataReceived(dataList) {\n        if(!this.map_drawn){\n            this.recentData = dataList;\n            this.render();\n            this.map_drawn = true;\n        }\n\n        this.recentData = dataList;\n        this.process_data(dataList);\n    }\n\n    process_data(dataList){\n        var self = this;\n\t    var data_targets = dataList.map(target => target.target);\n        //update with the data!\n        _.forEach(dataList, function(data){\n            _.forEach(self.panel.layers, function(layer){\n                //find the link associated with this data\n\n                if(typeof layer.active !== \"function\"){\n                    return;\n                }\n\t\t\n                if(layer.topology() === undefined){\n                    return;\n                }\n\t\t\n                var links = layer.topology().links();\n                var endpoints = layer.topology().endpoints();\n\n                // Hide layers without data\n                if(self.panel.hide_layers){\n                    _.forEach(links, function(l){\n                        _.forEach(l.endpoints, function(ep){\n                            if(!data_targets.includes(ep.name)){       \n                                layer.toggle(false);\n                            }\n                        }); \n                    }); \n                }\n                var target;\n                var dir;\n                \n                // Match endpoints to visualize the data\n                var target_endpoints = [];\n                if(endpoints) {\n                    _.forEach(endpoints, function(pop){\n                        if(data.target == pop.name){\n                            target_endpoints.push({endpoint: pop, name: pop.name, label: pop.label});\n                        }\n                    });\n                }\n                \n\n                // Match links to visualize the data\n                var target_links = [];\n                if(links){\n                    _.forEach(links, function(l){\n                        _.forEach(l.endpoints, function(ep){\n                            var str =  l.name + \" \" + ep.name;\n                            if(data.target == ep.name){\n                                if(ep.label){\n                                    target_links.push({link: l, endpoint: ep.name, label: ep.label, full: str});\n                                }else{\n                                    target_links.push({link: l, endpoint: ep.name, label: null, full: str});\n                                }\n                            }\n                        });\n                    });\n                }\n                var cur;\n                var min;\n                var max;\n                var sum = 0;\n                var count = 0;\n                var avg;\n                var interval;\n\n                //find the last valid value i.e. the current value\n                //find the min\n                //find the max\n                //find the average\n                //find the total datapoints\n                for (var i = (data.datapoints.length - 1); i >= 0; i--){\n                    var value = data.datapoints[i][0];\n                    if(value !== undefined && value !== null){\n                        sum += value;\n                        count += 1;\n                        if(min === undefined){\n                            min = value;\n                            max = value;\n                        }\n                        if(value < min){\n                            min = value;\n                        }\n                        if(value > max){\n                            max = value;\n                        }\n\t\t\t\n                        if(cur === undefined){\n                            cur = value;\n                        }\n                    }\n                }\n\n                if(count > 1){\n                    var start = data.datapoints[0][1];\n                    var end = data.datapoints[1][1];\n                    interval = start - end;\n                }\n\t           \n                // if target_endpoints is not empty, visualize the data\n                if(target_endpoints.length > 0){\n                    _.forEach(target_endpoints, function(obj){\n                        let layer_max = layer.max();\n                        let layer_min = layer.min();\n                        let color_criteria = self.panel.layer.node.selected;\n                        var e = obj.endpoint;\n                        e.cur = cur;\n                        e.min = min;\n                        e.max = max;\n                        e.sum = sum;\n                        e.count = count;\n                        avg = sum/count;\n                        e.avg = avg.toFixed(2);\n                        let color_value; \n                        if(color_criteria === \"Average\"){\n                            color_value = ((avg - layer_min) / (layer_max-layer_min)) * 100;\n                        } else if(color_criteria === \"Minimum\") {\n                            color_value = ((min - layer_min) / (layer_max-layer_min)) * 100;\n                        } else if(color_criteria === \"Maximum\") {\n                            color_value = ((max - layer_min) / (layer_max-layer_min)) * 100;\n                        } else {\n                            color_value = ((cur - layer_min) / (layer_max-layer_min)) * 100;\n                        }\n                        // use the color value to get color if mode === spectrum or threshold || get opacity if mode === opacity\n                        // set color or opacity for the endpoint (e.opacity, e.color)\n                        // use these values in the single tube layer\n                        let mode = self.panel.color.mode;\n                        var popColor;\n                        var popOpacity;\n                        if(mode === 'spectrum'){\n                            popColor =self.scale.getColor(color_value);\n                            e.endpointColor = popColor;\n                            e.endpointOpacity = 1;\n                        }else if(mode === 'opacity'){\n                            popColor = self.panel.color.cardColor;\n                            popOpacity = self.scale.getOpacity(color_value, self.opacity);\n                            e.endpointColor = popColor;\n                            e.endpointOpacity = popOpacity;\n                        }else if(mode === 'threshold'){\n                            popColor = self.scale.getThresholdColor(color_value, self.t_colors, self.panel.legend.thresholds);\n                            e.endpointColor = popColor;\n                            e.endpointOpacity = 1;\n                        }\n                    });\n                }\n                \n\n                // updating link information with the calculated values\n                // set line color for the lines based on these values\n                        \n                _.forEach(target_links, function(obj){\n                    let layer_max = layer.max();\n                    let layer_min = layer.min();\n                    let color_criteria = self.panel.layer.link.selected;\n                    var l = obj.link\n                    l.count = count;\n                    avg = sum/count;\n                    let color_value;\n                    if(color_criteria === \"Average\") {\n                        color_value = ((avg - layer_min) / (layer_max-layer_min)) * 100;\n                    } else if(color_criteria === \"Minimum\") {\n                        color_value = ((min - layer_min) / (layer_max-layer_min)) * 100;\n                    } else if(color_criteria === \"Maximum\") {\n                        color_value = ((max - layer_min) / (layer_max-layer_min)) * 100;\n                    } else {\n                        color_value = ((cur - layer_min) / (layer_max-layer_min)) * 100;\n                    }\n\n                    // if mode === spectrum, set the line color based on % value\n                    // else if mode === opacity, set the line color with the card color and opacity based on % value\n                    // create a new property for links - l.lineOpacity\n                    // apply opacity to circuits in the single tube layer.\n                    let mode = self.panel.color.mode;\n                    var lineColor;\n                    var lineOpacity;\n                    if(mode === 'spectrum'){\n                        lineColor =self.scale.getColor(color_value);\n                        l.lineColor = lineColor;\n                        l.lineOpacity = 1;\n                    }else if(mode === 'opacity'){\n                        lineColor = self.panel.color.cardColor;\n                        lineOpacity = self.scale.getOpacity(color_value, self.opacity);\n                        l.lineColor = lineColor;\n                        l.lineOpacity = lineOpacity;\n                    }else if(mode === 'threshold'){\n                        lineColor = self.scale.getThresholdColor(color_value, self.t_colors, self.panel.legend.thresholds);\n                        l.lineColor = lineColor;\n                        l.lineOpacity = 1;\n                    }\n\n                    //check for AZ or ZA based on the endpoint the data was found at!\n                    if(l.endpoints[0].name === obj.endpoint){\n                        l.az.name = l.endpoints[0].name;\n                        if(l.endpoints[0].label) l.az.label = l.endpoints[0].label;\n                        l.az.cur = color_value;\n                        l.azLineColor = lineColor;\n                        l.azLineOpacity = lineOpacity;\n                        l.az.max = self.toSI(max);\n                        l.az.min = self.toSI(min);\n                        l.az.sum = self.toSI(sum);\n                        l.az.avg = self.toSI(avg);\n                        l.az.now = self.toSI(cur);\n                        l.arrow = 1;\n                    } else{\n                        l.za.name = l.endpoints[1].name;\n                        if(l.endpoints[1].label) l.za.label = l.endpoints[1].label;\n                        l.za.cur = color_value;\n                        l.zaLineColor = lineColor;\n                        l.zaLineOpacity = lineOpacity;\n                        l.za.max = self.toSI(max);\n                        l.za.min = self.toSI(min);\n                        l.za.sum = self.toSI(sum);\n                        l.za.avg = self.toSI(sum / count);\n                        l.za.now = self.toSI(cur);\n                        l.arrow = 2;\n                    }\n\t\t            if(!self.panel.twin_tubes){ \n                        if(l.az.cur != null && l.za.cur != null){\n                            if(l.az.cur > l.za.cur){\n                                l.lineColor = l.azLineColor;\n                                l.lineOpacity = l.azLineOpacity;\n                                l.arrow = 1;\n                            } else{\n                                l.lineColor = l.zaLineColor;\n                                l.lineOpacity = l.zaLineOpacity;\n                                l.arrow = 2;\n                            }\n                        }\n                    }\n                });\t\n            });\n        });\n\t\n        _.forEach(this.panel.layers, function(layer){\n            if(typeof layer.active !== \"function\"){\n                return;\n            }\n            layer.update();\n        });\n    }\n\n    toSI(num){\n        if(this.panel.to_si === 0){ \n            num = num / panelDefaults.to_si;\n        } else{\n            num = num / this.panel.to_si;\n        }\n        return num.toFixed(2);\n    }\n    \n    onDataError(err) {\n        this.dataRaw = [];\n    }\n    \n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/globalnoc-networkmap-panel/editor.html', 2);\n        this.addEditorTab('Display', 'public/plugins/globalnoc-networkmap-panel/display_editor.html', 3);\n        tempArray=this.scale.displayColor(this.panel.colorScheme);\n    } \n   \n    onInitPanelActions(actions) {\n         this.render();\n    }\n     \n    jsonModal(){\n        var modalScope = this.$scope.$new(false);\n        modalScope.panel = this.panel; \n        appEvents.emit('show-modal', {\n            src: 'public/plugins/globalnoc-networkmap-panel/json_editor.html',\n            scope: modalScope,\n        });\n    }\n      \n    addNewChoice() {\n        var num = this.panel.choices.length + 1;\n        this.panel.choices.push(num);\n        this.layer_ids.push('');\n        this.panel.name.push('');\n        this.panel.mapSrc.push('');\n        this.panel.max.push('');\n        this.panel.min.push('');\n        //not sure\n        this.panel.size.push('')\n    }\n    \n    useValidator(index) {\n        this.jsonModal();\n        let json = this.panel.mapSrc[index];\n        let json_obj;\n        try{\n            json_obj = JSON.parse(json);\n            this.json_content = JSON.stringify(json_obj, undefined, 2);\n        }catch(e){\n            this.json_content = json;\n        }\n        this.json_index = index;\n    }\n    \n    saveToMapSrc(index){\n        if(index===null) return;\n        this.panel.mapSrc[index] = this.json_content;\n        this.render();\n    }\n\n    removeChoice(index) {\n        this.panel.choices.splice(index,1);\n        if(this.layer_ids[index]){\n           $(\"#\"+this.layer_ids[index]).remove();\n        }\n        this.layer_ids.splice(index,1);\n        this.panel.name.splice(index,1);\n        this.panel.mapSrc.splice(index,1);\n        this.panel.max.splice(index,1);\n        this.panel.min.splice(index,1);\n\t//Not sure\n\tthis.panel.size.splice(index,1)\n    }\n\n    display() {\n        this.colors=this.scale.displayColor(this.panel.colorScheme);\n        this.rgb_values = this.colors.rgb_values;\n        this.hex_values = this.colors.hex_values;\n        if(this.panel.legend.invert){\n            _.reverse(this.hex_values);\n            _.reverse(this.rgb_values);\n        }\n    }\n\n    displayOpacity(options, legendWidth){\n        this.opacity = this.scale.getOpacityScale(options, legendWidth);\n        if(this.panel.legend.invert){\n            _.reverse(this.opacity);\n        } \n    }\n    \n    isSorted(arr){\n        let original = arr.toString();\n        arr.sort(function(a,b){\n            return a-b;\n        });\n        return arr.toString() === original;\n    }\n\n    displayThresholds(){ \n        this.t_colors = this.scale.getThresholdScale(this.panel.legend.thresholds, this.panel.threshold_colors);\n        return this.t_colors;\n    }\n\n    getState(){\n        this.show_legend = this.panel.legend.show;\n    }\n   \n    getHtml(htmlContent){\n        return this.custom_hover.parseHtml(htmlContent);\n    }\n\n    isJson(str){\n        try{\n            JSON.parse(str)\n        }catch(e){\n            return false;\n        }\n        return true;\n    }\n\n    link(scope, elem, attrs, ctrl){\n        var self = this;\n        ctrl.events.on('render', function() {\n            ctrl.panel.legend.adjLoadLegend = {\n                horizontal: true,\n            }\n            let zoom = ctrl.panel.zoom; \n            let html_content = ctrl.getHtml(ctrl.panel.tooltip.content);\n            ctrl.panel.tooltip.content = html_content;\n            let node_content = ctrl.getHtml(ctrl.panel.tooltip.node_content);\n            ctrl.panel.tooltip.node_content = node_content;\n            if(ctrl.map_drawn == true){\n                if(ctrl.panel.color.mode === 'opacity'){\n                    ctrl.displayOpacity(ctrl.panel.color, ctrl.map.width()*0.4);\n                    ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                    ctrl.panel.legend.opacity = ctrl.opacity;\n                    ctrl.panel.legend.card_color = ctrl.panel.color.cardColor;\n                } else if (ctrl.panel.color.mode === 'spectrum'){\n                    ctrl.display();\n                    ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                    ctrl.panel.legend.legend_colors = ctrl.hex_values;\n                } else if(ctrl.panel.color.mode === 'threshold'){\n                    ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                    if(ctrl.isSorted(ctrl.panel.legend.thresholds)){\n                        let colors = ctrl.displayThresholds();\n                        ctrl.panel.legend.legend_colors = colors;\n                    }else {\n                        ctrl.t_colors = [];\n                        ctrl.panel.legend.thresholds = [];\n                        ctrl.panel.legend.legend_colors = [];\n                    }\n                }\n\n                ctrl.map.drawLegend(ctrl.panel.legend);\n                ctrl.map.validateSize();\n                if(!ctrl.panel.use_image) {\n                    zoom = ctrl.panel.zoom;\n                    if(zoom > 18){\n                        zoom = 18;\n                    }else if(zoom < 1){\n                        zoom = 1;\n                    }\n                    let latlng = [ctrl.panel.lat, ctrl.panel.lng];\n                    ctrl.map.setMapUrl(ctrl.panel.map_tile_url);\n                    ctrl.map.zoom({zoom});\n                    ctrl.map.panTo({latlng});\n                } else {\n                    zoom = ctrl.panel.zoom;\n                    if(zoom > 4){\n                        zoom = 4;\n                    }else if(zoom < 2){\n                        zoom = 2;\n                    }\n                    let latlng = [0, 0];\n                    ctrl.map.setImageUrl(ctrl.panel.image_url, zoom);\n                    ctrl.map.zoom({zoom});\n                    ctrl.map.panTo({latlng});\n                }\n\n                // Remove existing layers from DOM and the  map before adding new layers.\n                let all_layers = ctrl.layer_ids;\n                _.forEach(all_layers, function(layer){\n                    if(layer!==''){\n                        $(\"#\"+layer).remove();\n                        ctrl.map.removeLayers(layer);\n                    }\n                });\n\n                ctrl.layer_ids = [];\n                ctrl.panel.layers = [];\n                for(let j=0; j<ctrl.panel.choices.length;j++){\n                    if(ctrl.panel.mapSrc[j] === null || ctrl.panel.mapSrc[j] === undefined) {\n                        return;\n                    }\n\n                    let networkLayer = ctrl.map.addNetworkLayer({\n                        name: ctrl.panel.name[j],\n                        max: ctrl.panel.max[j],\n                        min: ctrl.panel.min[j],\n                        lineWidth: ctrl.panel.size[j],\n                        twin_tubes: ctrl.panel.twin_tubes,\n                        mapSource: ctrl.panel.mapSrc[j],\n                        endpointColor : ctrl.panel.nodeFillColor\n                    });\n                    if(ctrl.panel.mapSrc[j] === null || ctrl.panel.mapSrc[j] === undefined || ctrl.panel.mapSrc[j] === \"\") {\n                        ctrl.layer_ids.push('');\n                        continue;\n                    }\n                    ctrl.layer_ids.push(networkLayer.layerId());\n                    ctrl.panel.layers.push(networkLayer);\n                    networkLayer.onInitComplete(function() {\n                        ctrl.process_data(self.recentData);\n                    });\n                    if(ctrl.isJson(ctrl.panel.mapSrc[j])){\n                        ctrl.process_data(self.recentData);\n                    }\n                }\n                return;\n            }\n\n            if(!document.getElementById('container_map_' + ctrl.panel.id)){\n                console.log(\"Container not found\");\n            }\n\n            if(!ctrl.panel.use_image){\n                zoom = ctrl.panel.zoom;\n                if(zoom > 18){\n                    zoom = 18;\n                }else if(zoom <= 2){\n                    zoom = 2;\n                }\n                let map = LeafletMap({ containerId: ctrl.containerDivId,\n                    bing_api_key: ctrl.panel.bing_api_key,\n                    map_tile_url: ctrl.panel.map_tile_url,\n                    image: ctrl.panel.use_image,\n                    lat: ctrl.panel.lat,\n                    lng: ctrl.panel.lng,\n                    zoom: zoom,\n                    twin_tubes: ctrl.panel.twin_tubes,\n                    tooltip: ctrl.panel.tooltip\n                });\n                ctrl.map = map;\n            } else {\n                zoom = ctrl.panel.zoom;\n                if(zoom > 4){\n                    zoom = 4;\n                }else if(zoom <= 2){\n                    zoom = 2;\n                }\n                let map = LeafletMap({ containerId: ctrl.containerDivId,\n                    map_tile_url: ctrl.panel.map_tile_url,\n                    image: ctrl.panel.use_image,\n                    image_url: ctrl.panel.image_url,\n                    lat: 45,\n                    lng: -90,\n                    zoom: zoom,\n                    twin_tubes: ctrl.panel.twin_tubes,\n                    tooltip: ctrl.panel.tooltip\n                });\n                ctrl.map = map;\n            }\n            ctrl.map_drawn = true;\n            if(ctrl.panel.color.mode === 'opacity'){\n                ctrl.displayOpacity(ctrl.panel.color, ctrl.map.width() * 0.4);\n                ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                ctrl.panel.legend.opacity = ctrl.opacity;\n                ctrl.panel.legend.card_color = ctrl.panel.color.cardColor;\n            } else if(ctrl.panel.color.mode === 'spectrum'){\n                ctrl.display();\n                ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                ctrl.panel.legend.legend_colors = ctrl.hex_values;\n            } else if(ctrl.panel.color.mode === 'threshold'){\n                ctrl.panel.legend.mode = ctrl.panel.color.mode;\n                if(ctrl.isSorted(ctrl.panel.legend.thresholds)){\n                    let colors = ctrl.displayThresholds();\n                    ctrl.panel.legend.legend_colors = colors;\n                }else {\n                    ctrl.t_colors = [];\n                    ctrl.panel.legend.thresholds = []\n                    ctrl.panel.legend.legend_colors = [];\n                }\n            }\n\n            if(ctrl.panel.legend.show){\n                ctrl.map.drawLegend(ctrl.panel.legend);\n            }\n\n            if(ctrl.map === undefined){\n                return;\n            }\n\n            for(let i=0; i < ctrl.panel.choices.length; i++){\n                if(ctrl.panel.mapSrc[i] === null || ctrl.panel.mapSrc[i] === undefined){\n                    return;\n                }\n                let networkLayer = ctrl.map.addNetworkLayer({\n                    name: ctrl.panel.name[i],\n                    max: ctrl.panel.max[i],\n                    min: ctrl.panel.min[i],\n                    twin_tubes: ctrl.panel.twin_tubes,\n                    lineWidth: ctrl.panel.size[i],\n                    mapSource: ctrl.panel.mapSrc[i],\n                    endpointColor : ctrl.panel.nodeFillColor,\n                });\n                ctrl.layer_ids.push(networkLayer.layerId());\n                ctrl.panel.layers.push(networkLayer);\n                networkLayer.onInitComplete(function(){\n                    ctrl.process_data(self.recentData);\n                });\n                if(ctrl.isJson(ctrl.panel.mapSrc[i])){\n                    ctrl.process_data(self.recentData);\n                }\n            }\n        });\n\n    }\n}\n\nAtlas3.templateUrl = 'module.html';\n"]}